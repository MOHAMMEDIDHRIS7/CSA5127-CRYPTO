#include <stdio.h>
#include <math.h>

long long int power(long long int a, long long int b, long long int mod) {
    long long int result = 1;
    a = a % mod;
    while (b > 0) {
        if (b % 2 == 1)
            result = (result * a) % mod;
        b = b >> 1;
        a = (a * a) % mod;
    }
    return result;
}

int main() {
    long long int p, g, a, b;
    
    printf("Enter prime number (p): ");
    scanf("%lld", &p);
    
    printf("Enter primitive root (g): ");
    scanf("%lld", &g);

    printf("Enter Alice's private key (a): ");
    scanf("%lld", &a);
    
    printf("Enter Bob's private key (b): ");
    scanf("%lld", &b);

    long long int A = power(g, a, p); 
    long long int B = power(g, b, p);  
    long long int secretKeyA = power(B, a, p); 
    long long int secretKeyB = power(A, b, p);  

    printf("Alice's Public Key (A): %lld\n", A);
    printf("Bob's Public Key (B): %lld\n", B);
    printf("Shared Secret Key (Computed by Alice): %lld\n", secretKeyA);
    printf("Shared Secret Key (Computed by Bob): %lld\n", secretKeyB);

    return 0;
}
